Рефакторинг
Ввод стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Измените данный код так, чтобы исключить дублирование кода, но, чтобы результат работы программы не изменился.
Данное решение оценивается в баллах - чем меньше строк и символов в итоговом решении, тем больше баллов.
Для получения максимального количества баллов, нужно, чтобы в решении было меньше 10 строк и меньше 350 символов, однако, данную задачу возможно решить в 175 символов и в 1 строку.
XML
Ввод стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Дан файл data_bank.csv. Из этого файла необходимо сформировать xml-структуру следующего вида:
<ValCurs Data="01.01.2021" name="Foreign Currency Market"><Valute ID="R01010"><NumCode>036</NumCode><CharCode>AUD</CharCode><Nominal>1</Nominal><Name>Австралийский доллар</Name><Value>56.9065</Value></Valute><Valute ID="R01020A"> ... </Valute></ValCurs>

JSON
Ввод стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Дан файл data_bank.csv. Из этого файла необходимо сформировать json-структуру следующего вида:
{ "Date": "2021-01-01", "name": "Foreign Currency Market", "Valute": { "AUD": { "ID": "R01010", "NumCode": "036", "CharCode": "AUD", "Nominal": 1, "Name": "Австралийский доллар", "Value": 56.9065 },... } }

Возраст пассажиров
Ввод стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Дан файл "titanic.csv" в формате .csv, который можно открыть командой pd.read_csv("titanic.csv")
Каждая строка набора данных - это отдельный человек, который либо выжил, либо не выжил (столбец "Survived").
В данной задаче необходимо определить количество людей в наборе данных возраст которых строго больше N. Где N - некое целое число от 0 до 100, которое подается на вход вашей функции. На выходе ожидается также целое число - количество пассажиров Титаника.
Формат ввода 60
Формат вывода 22

Что общего у...
Дан файл "titanic.csv" в формате .csv, который можно открыть командой pd.read_csv("titanic.csv")
Каждая строка набора данных - это отдельный человек, который либо выжил, либо не выжил (столбец "Survived").
В данной задаче необходимо определить один из статистических показателей: количество, максимум, минимум - по указанной группе пассажиров, по указанному признаку. Например, найти количество представителей выживших/не выживших пассажиров ("Survived") по столбцу "Pclass".
На вход получаем: столбец по которому группируем, столбец для которого ищем статистику, название самой статистики (count, min, max)
На выходе печатаем столько строк, сколько получилось после группировки по указанному столбцу. В каждой строке сначала название группы (уникальное значение столбца, по которому группировали), затем пробел, затем значение статистики для указанной группы.
Формат ввода
Survived Pclass count
Формат вывода
0 549
1 342

Более сложные условия
Дан файл "titanic.csv" в формате .csv, который можно открыть командой pd.read_csv("titanic.csv")
Каждая строка набора данных - это отдельный человек, который либо выжил, либо не выжил (столбец "Survived").
В данной задаче необходимо определить долю выживших людей ("Survived" == 1) в наборе данных, которые удовлетворяют заданному составному фильтру:
Их возраст ("Age") строго больше заданного числа N
Их Pclass строго равен заданному числу P
Количество родственников ("Parch") строго равно заданному числу K
Формат ввода
60 1 0
Формат вывода
0.2727
Примечания
Целые числе выводим без нулей после запятой. Дробные числа выводим с точностью до 4 знаков после запятой.
В случае если никто в наборе данных не удовлетворяет предоставленным фильтрам, выводим долю выживших равной 0
Обратите внимание, что ожидается НЕ процент, а именно ДОЛЯ выживших людей.

Пропуски в age
Дан файл "titanic.csv" в формате .csv, который можно открыть командой pd.read_csv("titanic.csv")
Каждая строка набора данных - это отдельный человек, который либо выжил, либо не выжил (столбец "Survived").
В данном наборе, в столбце "Age" есть пропуски, то есть некоторые значения ячеек не цифры, а None. Для заполнения None в pandas есть специальный инструмент df["Название столбца"].fillna("заполнитель"). Где заполнителем может быть число, или строка, или другой объект, в зависимости от типа столбца. В столбце "Age" хранятся числовые объекты - float.
Ваша задача принять из stdin значение (тип float) и заполнить им пропуски в столбце "Age" и вернуть среднее значение столбца "Age".
Формат ввода
0.0
Формат вывода
23.7993
Примечания
Округление производить до 4-х знаков после запятой

